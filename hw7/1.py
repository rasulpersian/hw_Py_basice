"""
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31 22
37 43
51 86

3   5 32
2   4  6
-1 64 -8

3 5 8 3
8 3 7 1

Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.

"""


class Matrix:

    def __init__(self, main_list):
        self.fist_list = main_list[0]
        self.second_list = main_list[1]

    def __add__(self):
        matrix = [[self.fist_list[0][0] + self.second_list[0][0], self.fist_list[0][1] + self.second_list[0][1]],
                  [self.fist_list[1][0] + self.second_list[1][0], self.fist_list[1][1] + self.second_list[1][1]]]
        return str('\n '.join(['\t'.join([str(k) for k in i]) for i in matrix]))

    def __str__(self):

        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in self.fist_list])) + \
               '\n \n' + str('\n'.join(['\t'.join([str(j) for j in i]) for i in self.second_list]))


m = Matrix([[[2, 3], [4, 5]], [[10, 2], [2, 8]]])
print(m)
print('Результат сложения матриц:\n', m.__add__())

